head(a)
# note que aunque se calculó la media de todas las variables, sabemos que no tiene mucho
# sentido hablar de la media de la variable *am*
means = colMeans(a)
# note que aunque se calculó la media de todas las variables, sabemos que no tiene mucho
# sentido hablar de la media de la variable *am*
means = colMeans(a)
means
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
colModes <- function(dataframe){
names = colnames(dataframe)
modes = c(1:length(names))
count = 0
for (name in names){
modes[count] = getmode(dataframe[[name]])
count = count + 1
}
df = data.frame(names, modes)
return(df)
}
colModes(a)
colSd <- function(dataframe){
names = colnames(dataframe)
stard_deviation = c(1:length(names))
count = 0
for (name in names){
stard_deviation[count] = sd(dataframe[[name]])
count = count + 1
}
df = data.frame(names, stard_deviation)
return(df)
}
colSd(a)
for (name in colnames(a)){
boxplot(a[[name]], main = name, sub="para detectar outliers")
}
histPerDataframeCol <- function(dataframe, nbreaks){
names = colnames(a)
for(name in names){
hist(dataframe[[name]], main=name, breaks = nbreaks, xlab = name)
}
}
histPerDataframeCol(a, 5)
boxplot(a)
install.packages("car")
install.packages("car")
## Paquetes de interes
packages = c("dslabs", "MASS", "scatterplot3d", "car")
## Se cargan o se instalan y cargan
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic)
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16)
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue')
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue', xlab "palmic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue', xlab = "palmic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue', xlab = "palmic",
ylab = "stearic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue', xlab = "palmic",
zlab="stearic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue')#, xlab = "palmic",
ylab= "palmitoleic", zlab="stearic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue'), xlab = "palmic",
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue'), xlab = "palmic",
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue'), xlab = "palmic",
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
scatterplot3d(olive$palmitic~olive$region olive$palmitoleic, olive$stearic, pch=16, color = 'steelblue', xlab = "palmic",
scatterplot3d(olive$palmitic~olive$region, olive$palmitoleic~olive$region, olive$stearic~olive$region,
pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic,
pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col=region
pch=16, color = 'steelblue', xlab = "palmic",
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col=olive$region
pch=16, color = 'steelblue', xlab = "palmic",
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region,
pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region,
pch=16,  xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
olive$region
library("ggplot2")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region)
#library("ggplot2")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region)
library("ggplot2")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region,
pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
library("ggplot2")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region,
pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
help("scatterplot3d")
library("ggplot2")
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, color= olive$region,
pch=16,  xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
olive$region
library("ggplot2")
ggplot(olive, aes(x=palmitic, y=palmitoleic,z=stearic))+geom_point()
scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region,
pch=16, color = 'steelblue', xlab = "palmic",
ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
library(plotly)
install.packages(x, dependencies = TRUE)
library(plotly)
install.packages(plotly, dependencies = TRUE)
library(plotly)
install.packages("plotly", dependencies = TRUE)
library(plotly)
#library("ggplot2")
#ggplot(olive, aes(x=palmitic, y=palmitoleic,z=stearic))+geom_point()
#scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region,
#              pch=16, color = 'steelblue', xlab = "palmic",
#              ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic)
#library("ggplot2")
#ggplot(olive, aes(x=palmitic, y=palmitoleic,z=stearic))+geom_point()
#scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region,
#              pch=16, color = 'steelblue', xlab = "palmic",
#              ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)
#library("ggplot2")
#ggplot(olive, aes(x=palmitic, y=palmitoleic,z=stearic))+geom_point()
#scatterplot3d(olive$palmitic, olive$palmitoleic, olive$stearic, col= olive$region,
#              pch=16, color = 'steelblue', xlab = "palmic",
#              ylab= "palmitoleic", zlab="stearic", main= "diagrama dispersión palmic-palmitoleic-stearic")
install.packages("plotly", dependencies = TRUE)
library(plotly)
library(x, character.only = TRUE)
install.packages("plotly", dependencies = TRUE)
## Paquetes de interes
packages = c("dslabs", "MASS", "scatterplot3d", "car")
## Se cargan o se instalan y cargan
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
install.packages("plotly", dependencies = TRUE)
library(plotly)
library(plotly, character.only = TRUE)
install.packages("plotly", dependencies = TRUE)
library(plotly, character.only = TRUE)
install.packages("plotly", dependencies = TRUE)
## Paquetes de interes
packages = c("dslabs", "MASS", "scatterplot3d", "car")
## Se cargan o se instalan y cargan
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
install.packages("plotly", dependencies = TRUE)
library(plotly)
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region, xlab="AA")
help(plot_ly)
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "broom", "colorspace", "cpp11", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "dtplyr", "fansi", "fs", "gargle", "generics", "glue", "googledrive", "googlesheets4", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "magrittr", "mime", "nloptr", "openssl", "pillar", "quantreg", "R6", "readr", "reprex", "rlang", "rmarkdown", "rvest", "stringi", "tibble", "tidyr", "tinytex", "utf8", "uuid", "xfun", "xml2", "yaml"))
install.packages("htmltools")
install.packages("htmltools")
## Paquetes de interes
packages = c("dslabs", "MASS", "scatterplot3d", "car")
## Se cargan o se instalan y cargan
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
boxplot(olive$oleic~olive$region)
a = mtcars
head(a)
# note que aunque se calculó la media de todas las variables, sabemos que no tiene mucho
# sentido hablar de la media de la variable *am*
means = colMeans(a)
means
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
colModes <- function(dataframe){
names = colnames(dataframe)
modes = c(1:length(names))
count = 0
for (name in names){
modes[count] = getmode(dataframe[[name]])
count = count + 1
}
df = data.frame(names, modes)
return(df)
}
colModes(a)
colSd <- function(dataframe){
names = colnames(dataframe)
stard_deviation = c(1:length(names))
count = 0
for (name in names){
stard_deviation[count] = sd(dataframe[[name]])
count = count + 1
}
df = data.frame(names, stard_deviation)
return(df)
}
colSd(a)
for (name in colnames(a)){
boxplot(a[[name]], main = name, sub="para detectar outliers")
}
histPerDataframeCol <- function(dataframe, nbreaks){
names = colnames(a)
for(name in names){
hist(dataframe[[name]], main=name, breaks = nbreaks, xlab = name)
}
}
histPerDataframeCol(a, 5)
boxplot(a)
install.packages("car")
olive_acids <- subset(olive, select = c(palmitic, palmitoleic, stearic))
scatterplotMatrix(~ +., data = olive_acids, diagonal=list(method ="boxplot"))
install.packages("plotly", dependencies = TRUE)
## Paquetes de interes
packages = c("dslabs", "MASS", "scatterplot3d", "car")
## Se cargan o se instalan y cargan
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
boxplot(olive$oleic~olive$region)
a = mtcars
head(a)
# note que aunque se calculó la media de todas las variables, sabemos que no tiene mucho
# sentido hablar de la media de la variable *am*
means = colMeans(a)
means
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
colModes <- function(dataframe){
names = colnames(dataframe)
modes = c(1:length(names))
count = 0
for (name in names){
modes[count] = getmode(dataframe[[name]])
count = count + 1
}
df = data.frame(names, modes)
return(df)
}
colModes(a)
colSd <- function(dataframe){
names = colnames(dataframe)
stard_deviation = c(1:length(names))
count = 0
for (name in names){
stard_deviation[count] = sd(dataframe[[name]])
count = count + 1
}
df = data.frame(names, stard_deviation)
return(df)
}
colSd(a)
for (name in colnames(a)){
boxplot(a[[name]], main = name, sub="para detectar outliers")
}
histPerDataframeCol <- function(dataframe, nbreaks){
names = colnames(a)
for(name in names){
hist(dataframe[[name]], main=name, breaks = nbreaks, xlab = name)
}
}
histPerDataframeCol(a, 5)
boxplot(a)
install.packages("car")
olive_acids <- subset(olive, select = c(palmitic, palmitoleic, stearic))
scatterplotMatrix(~ +., data = olive_acids, diagonal=list(method ="boxplot"))
install.packages("plotly", dependencies = TRUE)
library(plotly)
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)
x1 = c(-6, -3, -2, 1, 2, 5, 6, 8)
x2 = c(-2, -3,  1, -1, 2, 1, 5, 3)
plot(x1, x2, xlab = "x1", ylab = "x2", main = "Diagrama de dispersion x1 vs x2")
df = data.frame(x1, x2)
cov(df)
rotate_points <- function(dataframe, angle){
#asume que hay 2 columnas x1, x2 y que cada fila representa un punto en el espacio
rotation_vec = c(cos(angle*pi/180), sin(angle*pi/180), -sin(angle*pi/180), cos(angle*pi/180))
rotation_mat = matrix(rotation_vec, nrow = 2, ncol = 2)
# extrae las columnas 1 y 2 del dataframe y las vuelve una matriz horizontal
matrix_points = t(as.matrix(dataframe[c(1,2)]))
# rota todos los puntos con la matriz de rotación
rotated_vecs = t(rotation_mat %*% matrix_points)
#un bonito df
rotated_vecs_df = data.frame(x1_rot = rotated_vecs[,1], x2_rot = rotated_vecs[,2])
return(rotated_vecs_df)
}
df_rot = rotate_points(df, 26)
print(df_rot)
s_rot = cov(df_rot)
s_rot
x1_new = c(4)
x2_new = c(-2)
df2 = data.frame(x1= x1_new, x2= x2_new)
df2_rot = rotate_points(df2, 26)
df2_rot
dist_between_points_and_point <- function(dataframe, covs, vec){
# extrae las columnas 1 y 2 del dataframe y las vuelve una matriz horizontal
matrix_points = t(as.matrix(dataframe[c(1,2)]))
# crea un vector con tantos ceros como puntos
distance = rep(0, dim(matrix_points)[2])
for (i in seq(1, dim(matrix_points)[2], by=1)){
distance[i] = sqrt( (matrix_points[1, i] - vec[1])^2/covs[1, 1]  + (matrix_points[2, i]- vec[2])^2/covs[2, 2] )
}
return (distance)
}
origin = c(0,0)
dist_between_points_and_point(df2_rot, s_rot, origin)
dist_between_origin_and_point <- function(x, angle, covs){
s11 = covs[1,1]
s22 = covs[2,2]
s12 = covs[1,2]
angle = angle*pi/180
a11 = ((cos(angle)^2)/(cos(angle)^2)*s11+2*sin(angle)*cos(angle)*s12+(sin(angle)^2)*s22) +
((sin(angle)^2)/(cos(angle)^2)*s22-2*sin(angle)*cos(angle)*s12+(sin(angle)^2)*s11)
a12 = (cos(angle)*sin(angle))/((cos(angle)^2)*s11 + 2*sin(angle)*cos(angle)*s12 + (sin(angle)^2)*s22) -
((sin(angle)*cos(angle))/((cos(angle)^2)*s22 - 2*sin(angle)*cos(angle)*s12 + (sin(angle)^2)*s11))
a22 = sin(angle)^2/( s11*(cos(angle)^2) + 2*sin(angle)*cos(angle)*s12 + s22*(sin(angle)^2) )
a22 = a22 - ( (cos(angle)^2)/ ( s22*(cos(angle)^2) - sin(angle)*cos(angle)*s12  + s11*sin(angle)^2) )
dist = sqrt( a11*(x[1]^2) + 2*a12*x[1]*x[2] + a22 *(x[2]^2) )
return (dist)
}
x_new = c(4, -2)
dist_between_origin_and_point(x_new, 26, s_rot)
install.packages("car")
install.packages("plotly", dependencies = TRUE)
library(plotly)
install.packages("plotly", dependencies = TRUE)
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)
plot(x1, x2, xlab = "x1", ylab = "x2", main = "Diagrama de dispersion x1 vs x2")
cov(df)
## Paquetes de interes
packages = c("dslabs", "MASS", "scatterplot3d", "car", "plotly")
## Se cargan o se instalan y cargan
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'Sepal Length (cm)'),
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'Sepal Length (cm)')
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'Sepal Length (cm)'))
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'palmitic (cm)'))
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'palmitic (cm)'))
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xlabel = list(title = 'palmitic (cm)'),
)
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xlabel = 'palmitic (cm)',
)
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Manually Specified Labels', plot_bgcolor = "#e5ecf6", xaxis = list(title = 'Sepal Length (cm)'),
yaxis = list(title = 'Sepal Width (cm)'), legend = list(title=list(text='<b> Species of Iris </b>')))
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%<%
layout(title = 'Manually Specified Labels', plot_bgcolor = "#e5ecf6", xaxis = list(title = 'Sepal Length (cm)'),
yaxis = list(title = 'Sepal Width (cm)'), legend = list(title=list(text='<b> Species of Iris </b>')))
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Manually Specified Labels', plot_bgcolor = "#e5ecf6", xaxis = list(title = 'Sepal Length (cm)'),
yaxis = list(title = 'Sepal Width (cm)'), legend = list(title=list(text='<b> Species of Iris </b>')))
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Manually Specified Labels', plot_bgcolor = "#e5ecf6", xaxis = list(title = 'Sepal Length (cm)'),
yaxis = list(title = 'Sepal Width (cm)'), legend = list(title=list(text='<b> Regiones </b>')))
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'palmitic (cm)'),
)
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'palmitic (cm)'))
plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'X Axis Title'))
fig <- plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'X Axis Title'))
fig <- plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'X Axis Title'))
fig
fig <- plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
xaxis = list(title = 'X Axis Title'))
fig
fig <- plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
scene = list(xaxis=list(title="a")))
fig
fig <- plot_ly(x=olive$palmitic, y=olive$palmitoleic, z=olive$stearic, type="scatter3d", mode="markers",
color = olive$region)%>%
layout(title = 'Dispersión en 3D palmitic-palmitoleic-stearic',
scene = list(xaxis=list(title="palmitic"),
yaxis=list(title="palmitoleic"),
zaxis=list(title="stearic")))
fig
